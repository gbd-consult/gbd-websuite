# GWS test suite configuration file
#
# These options are 'reasonable defaults' for all cases.
# If you need to overwrite any option here,
# create  `test.local.ini` in `app/` and place your local overrides there.

# ------------------------------------------------------------------
# pytest and flake defaults

[pytest]
addopts = -vv --capture=no -p no:warnings --color=yes -rA
python_files = *_test.py

[flake8]
ignore = N815
exclude = /gws/core/ext.py
max-complexity = 10

# ------------------------------------------------------------------
# options for the test runner

[runner]
# docker program
docker = docker
# docker compose program
docker_compose = docker compose
# compose services to activate (see host_runner.py)
services = all
# host machine name
docker_host_name = gws_test_host
# temporary working directory on the host (relative to APP_DIR)
work_dir = ./___test
# extra options for docker exec
exec_options=-it

# ------------------------------------------------------------------
# environment (paths are relative to 'work_dir')

[environment]
PGSERVICEFILE = ./pg_service.conf
GWS_UID = 1000
GWS_GID = 1000


# ------------------------------------------------------------------
# options for the gws docker service

[service.gws]
# docker image
image = gbdconsult/gws-amd64:8.0
# docker container name
name = gws_test_container
# data directory (relative to work_dir)
data_dir = ./gws-data
# var directory (relative to work_dir)
var_dir = ./gws-var
# where to expose the GWS http server
http_expose_port = 9990
# where to expose the GWS mapproxy server
mpx_expose_port = 9991

# ------------------------------------------------------------------
# options for the gws qgis service

[service.qgis]
# docker image
image = gbdconsult/qgis-debug-amd64:8.0
# docker container name
name = gws_test_qgis
# where to expose the qgis server
expose_port = 9992
# connection options
host = gws_test_qgis
port = 80


# ------------------------------------------------------------------
# options for the postgres service

[service.postgres]
# docker image
image = postgis/postgis:15-3.3
# docker container name
name = gws_test_postgres
# where to expose the postgres port
expose_port = 9001
# postgres data directory (optional, relative to work_dir)
data_dir =
# connection options
host = gws_test_postgres
port = 5432
user = gis
password = gispass
database = gisdb

# ------------------------------------------------------------------
# options for the web mock server

[service.mockserver]
# docker container name
name = gws_test_mockserver
# where to expose the web server port
expose_port = 9994
# connection options
host = gws_test_mockserver
port = 80
