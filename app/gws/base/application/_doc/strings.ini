[de]
gws.base.application.core.Config = Hauptkonfiguration der GBD WebSuite. Enthält globale Einstellungen, sowie die Projektkonfigurationen. Einige Konfigurationen wie `actions`, `finders`, `models` und `templates` können in den Projekten erweitert werden. Die Projekte werden direkt unter `projects` oder über Dateipfade `projectPaths` bzw. `projectDirs` geladen.
gws.base.application.core.Config.actions = Globale Serveraktionen. Actions definieren serverseitige Funktionalität, die von Client-Anwendungen ausgeführt werden können. Sie stellen die Schnittstelle zwischen Frontend und Backend dar und ermöglichen es, spezifische Geschäftslogik, Datenverarbeitung oder externe Service-Integrationen zu implementieren. Über Actions werden beispielsweise grundlegende Funktionen wie web (Client-Bereitstellung), project (Projektkonfiguration), map (Kartendarstellung), search (Datenabfragen), edit (Feature-Bearbeitung) oder print (Kartenausgabe) bereitgestellt.
gws.base.application.core.Config.auth = Autorisierungsmethoden und Optionen. Auth definiert die Authentifizierungs- und Autorisierungsverfahren für den Zugriff auf WebSuite-Ressourcen. Hier werden Provider wie system (lokale Benutzer), ldap (Active Directory-Integration), sql (datenbankbasierte Authentifizierung) oder web (externe Webdienste) konfiguriert. Über Sessions, Rollen und Berechtigungen wird granular gesteuert, welche Benutzer auf welche Projekte, Layer und Funktionen zugreifen dürfen.
gws.base.application.core.Config.cache = Cache Konfiguration. Cache definiert die Zwischenspeicherung von Daten und gerenderten Inhalten zur Performance-Optimierung der WebSuite. Hier werden verschiedene Cache-Typen wie redis (In-Memory-Datenbank), file (dateisystembasiert) oder memory (Arbeitsspeicher) konfiguriert. Der Cache beschleunigt wiederkehrende Anfragen für Kartenkacheln, WMS-Responses, Suchergebnisse und Metadaten erheblich und reduziert die Serverlast bei gleichzeitiger Verbesserung der Antwortzeiten.
gws.base.application.core.Config.client = Globale Konfiguration für den Client. Client definiert das Verhalten und Aussehen der Web-Benutzeroberfläche der WebSuite. Hier werden UI-Elemente wie Toolbar, Sidebar, Map oder Infobar sowie deren Anordnung und Funktionalitäten konfiguriert. Die Client-Konfiguration steuert Themes, verfügbare Tools, Kartenwerkzeuge und die allgemeine Benutzererfahrung. Dadurch lassen sich projektspezifische Oberflächen erstellen, die genau auf die Anforderungen der jeweiligen Anwendergruppe zugeschnitten sind.
gws.base.application.core.Config.database = Datenbank Konfiguration. Database definiert die Verbindungen zu externen Datenbanksystemen für die WebSuite. Hier werden Provider wie postgres (PostgreSQL/PostGIS), sqlite (lokale Dateien) oder andere SQL-Datenbanken mit Verbindungsparametern, Credentials und Performance-Einstellungen konfiguriert. Die Database-Konfiguration ermöglicht den Zugriff auf Geodaten, Attributtabellen, Benutzerdaten und Metadaten aus verschiedenen Datenquellen für Layer, Authentifizierung und Geschäftslogik.
gws.base.application.core.Config.developer = Entwickler-Konfiguration. Developer definiert Einstellungen für Debugging, Entwicklung und erweiterte Systemdiagnose der WebSuite. Hier werden Optionen wie reloader (automatische Code-Aktualisierung), profiler (Performance-Analyse), Logging-Level und Debug-Modi konfiguriert. Die Developer-Konfiguration aktiviert erweiterte Fehlerausgaben, Entwicklerwerkzeuge und Monitoring-Funktionen, die bei der Systementwicklung, Fehlerbehebung und Performance-Optimierung unterstützen.
gws.base.application.core.Config.finders = Globale Such- und Abfrage-Konfiguration. Finders definieren die verschiedenen Suchmechanismen und Abfragefunktionalitäten der WebSuite. Hier werden Suchtypen wie keyword (Textsuche), geometry (räumliche Suche), filter (attributbasierte Abfragen) oder postgres (datenbankspezifische Suchen) konfiguriert. Die Finders-Konfiguration ermöglicht es Benutzern, gezielt nach Features, Adressen, Koordinaten oder fachlichen Inhalten zu suchen und steuert die Darstellung der Suchergebnisse in der Client-Oberfläche.
gws.base.application.core.Config.fonts = Konfiguration für Schriftarten. Fonts definiert die verfügbaren Schriftarten für die Darstellung von Text in Karten, Labels und der Benutzeroberfläche. Hier werden Schriftfamilien wie Arial, Helvetica oder benutzerdefinierte Fonts mit ihren Pfaden und Eigenschaften konfiguriert. Die Fonts-Konfiguration steuert die Textdarstellung in Kartenbeschriftungen, Feature-Labels, Print-Ausgaben und Client-Elementen und ermöglicht ein einheitliches Corporate Design sowie die Unterstützung verschiedener Sprachen und Zeichensätze.
gws.base.application.core.Config.helpers = Hilfsdienste und Erweiterungen. Helpers definieren zusätzliche Dienste und Funktionalitäten, die andere WebSuite-Komponenten unterstützen. Hier werden spezialisierte Services wie alkis (Katasterdatenverarbeitung), csv (Datenimport/-export), ows (OGC-Webservice-Integration) oder storage (Dateiverwaltung) konfiguriert. Die Helpers-Konfiguration erweitert die Grundfunktionalität um fachspezifische Werkzeuge, Datenkonverter und externe Service-Integrationen, die von Layern, Actions und anderen Modulen genutzt werden können.
gws.base.application.core.Config.locales = Internationalisierung und Sprachkonfiguration.. Locales definiert die verfügbaren Sprachen und regionalen Einstellungen für die WebSuite-Benutzeroberfläche. Hier werden Sprachcodes wie de (Deutsch), en (Englisch) oder fr (Französisch) mit ihren Übersetzungsdateien und Formatierungsregeln konfiguriert. Die Locales-Konfiguration steuert die Lokalisierung von Menüs, Dialogen, Fehlermeldungen und Datumsformaten und ermöglicht mehrsprachige Anwendungen für internationale Benutzergruppen.
gws.base.application.core.Config.metadata = Globale Metadaten-Konfiguration. Metadata definiert beschreibende Informationen über das WebSuite-Projekt und dessen Inhalte. Hier werden Eigenschaften wie title (Projekttitel), abstract (Beschreibung), keywords (Schlagwörter), contact (Kontaktinformationen) und inspireMandatory (INSPIRE-konforme Metadaten) konfiguriert. Die Metadata-Konfiguration stellt projektbezogene Informationen für Katalogdienste, OGC-Services und Compliance-Anforderungen bereit und unterstützt die Auffindbarkeit und Dokumentation von Geodatenbeständen.
gws.base.application.core.Config.models = Globale Datenmodell-Konfiguration. Models definieren die Struktur und Eigenschaften von Datenobjekten in der WebSuite. Hier werden Feldtypen wie text, int, geometry oder date, Validierungsregeln, Beziehungen zwischen Objekten und Darstellungsoptionen konfiguriert. Die Models-Konfiguration steuert die Datenvalidierung, Feature-Editierung, Such- und Anzeigelogik und bildet die Grundlage für typisierte Geodatenobjekte, Formulare und datenbankbasierte Layer.
gws.base.application.core.Config.owsServices = Globale OGC-Webservice-Konfiguration. owsServices definiert die von der WebSuite bereitgestellten standardkonformen OGC-Webservices. Hier werden Services wie wms (Web Map Service), wfs (Web Feature Service), wmts (Web Map Tile Service) oder csw (Catalog Service Web) mit ihren Capabilities, Layern und Zugriffsrechten konfiguriert. Die owsServices-Konfiguration ermöglicht die Bereitstellung von Geodaten über standardisierte Schnittstellen für externe GIS-Anwendungen, Desktop-Clients und andere WebSuite-Instanzen.
gws.base.application.core.Config.printers = Globale Druck-Konfiguration. Printers definiert die verfügbaren Druckoptionen und -formate für Kartenausgaben der WebSuite. Hier werden Druckvorlagen mit Eigenschaften wie pageSize (Seitenformat), orientation (Ausrichtung), dpi (Auflösung), Template-Layouts und Ausgabeformate wie PDF oder PNG konfiguriert. Die Printers-Konfiguration ermöglicht hochqualitative Kartendrucke mit Legenden, Maßstäben, Nordpfeilen und benutzerdefinierten Layouts für professionelle Kartenpräsentationen und Berichte.
gws.base.application.core.Config.projectDirs = Projektverzeichnis-Konfiguration. projectDirs definiert die Dateisystempfade, in denen WebSuite-Projekte und deren Ressourcen gespeichert werden. Hier werden Verzeichnisse für Projektkonfigurationen, QGIS-Dateien, Geodaten, Templates und Asset-Dateien mit ihren absoluten oder relativen Pfaden konfiguriert. Die projectDirs-Konfiguration strukturiert die Dateiorganisation, ermöglicht die zentrale Verwaltung von Projektressourcen und steuert die Zugriffsrechte auf verschiedene Datenbestände für eine saubere Trennung von Entwicklungs-, Test- und Produktionsumgebungen.
gws.base.application.core.Config.projectPaths = Einzelprojekt-Pfadkonfiguration. projectPath definiert den spezifischen Dateisystempfad zu einer einzelnen Projektkonfigurationsdatei oder einem Projektverzeichnis. Hier wird der absolute oder relative Pfad zur .cx-Konfigurationsdatei oder zum Projektordner angegeben, der das WebSuite-Projekt enthält. Die projectPath-Konfiguration ermöglicht die direkte Referenzierung eines bestimmten Projekts und wird typischerweise in Single-Project-Installationen oder bei der gezielten Aktivierung einzelner Projekte aus einem größeren Projektbestand verwendet.
gws.base.application.core.Config.projects = Mehrprojekt-Konfiguration. projects definiert eine Liste von WebSuite-Projekten, die gleichzeitig auf dem Server verfügbar sind. Hier werden mehrere Projekte mit ihren jeweiligen Konfigurationen, UIDs, Pfaden und spezifischen Einstellungen definiert. Die projects-Konfiguration ermöglicht Multi-Tenant-Umgebungen, bei denen verschiedene Anwendungen, Fachbereiche oder Organisationseinheiten separate Projekte mit individuellen Karten, Layern und Berechtigungen nutzen können, während sie auf derselben WebSuite-Instanz betrieben werden.
gws.base.application.core.Config.server = Server-Konfiguration. server definiert die grundlegenden HTTP-Server-Einstellungen und Netzwerkparameter der WebSuite-Instanz. Hier werden Eigenschaften wie host (Bind-Adresse), port (Listening-Port), timeout (Request-Timeouts), SSL-Zertifikate, Worker-Prozesse und Performance-Parameter konfiguriert. Die server-Konfiguration steuert die Netzwerkverfügbarkeit, Sicherheitseinstellungen, Lastverteilung und Skalierbarkeit der WebSuite und bildet die technische Grundlage für alle Client-Server-Kommunikation und externe Service-Zugriffe.
gws.base.application.core.Config.storage = Speicher-Konfiguration. storage definiert die Datenspeicherung und Dateiverwaltung für temporäre und persistente Inhalte der WebSuite. Hier werden Speicherorte für Upload-Dateien, Session-Daten, Cache-Inhalte, Benutzer-Assets und temporäre Verarbeitungsergebnisse mit ihren Pfaden, Größenbeschränkungen und Aufbewahrungszeiten konfiguriert. Die storage-Konfiguration steuert die Dateisystem-Organisation, Speicherplatz-Management und Cleanup-Routinen und ermöglicht die sichere Verwaltung von Benutzerdaten, Import-/Export-Dateien und systeminternen Arbeitsdateien.
gws.base.application.core.Config.templates = Globale Template-Konfiguration. templates definiert die Vorlagen für die dynamische Generierung von HTML-Inhalten, Popups und Ausgabeformaten in der WebSuite. Hier werden Template-Typen wie html (Feature-Popups), text (Textausgaben), xml (strukturierte Daten) oder css (Styling) mit ihren Pfaden, Variablen und Formatierungsregeln konfiguriert. Die templates-Konfiguration ermöglicht die Anpassung von Feature-Informationen, Suchergebnissen, Print-Layouts und Client-Darstellungen durch wiederverwendbare Vorlagen mit dynamischen Inhalten und projektspezifischem Design.
gws.base.application.core.Config.web = Globale Web-Client-Konfiguration. web definiert die Bereitstellung und das Verhalten der Browser-basierten Benutzeroberfläche der WebSuite. Hier werden Eigenschaften wie root (URL-Pfad), cors (Cross-Origin-Einstellungen), ssl (HTTPS-Konfiguration), assets (statische Ressourcen) und rewrite (URL-Umschreibungsregeln) konfiguriert. Die web-Konfiguration steuert die Client-Auslieferung, Sicherheitsrichtlinien, Asset-Verwaltung und URL-Routing und bildet die Grundlage für den Zugriff auf WebSuite-Anwendungen über Webbrowser und externe Client-Integrationen.
gws.base.application.core.Config.vars = Variablen-Konfiguration. vars definiert globale Variablen und Parameter, die in der gesamten WebSuite-Konfiguration wiederverwendet werden können. Hier werden benutzerdefinierte Schlüssel-Wert-Paare wie Datenbankverbindungen, API-URLs, Pfade oder fachspezifische Konstanten definiert, die über Platzhalter in anderen Konfigurationsbereichen referenziert werden. Die vars-Konfiguration ermöglicht zentrale Parameterverwaltung, vereinfacht Umgebungswechsel zwischen Entwicklung und Produktion und reduziert Redundanzen durch die Wiederverwendung häufig genutzter Werte in komplexen Projektkonfigurationen.
