@comment

Editing 1:M relationships (person->poi and person->district).

Using `featureSuggest` widgets and `loadingStrategy lazy`
to facilitate lazy loading: useful for big tables.

@end

projects+ {
    title "Edit: lazy loading"
    metadata.abstract "Loading related features on demand."

    api.actions+ { type "edit" }
    client.addElements+ { tag "Sidebar.Edit" }
    client.addElements+ { tag "Toolbar.Edit" }
    client.options.sidebarActiveTab "Sidebar.Edit"

    map {
        center {demo_point_duesseldorf_3857}
        zoom.initScale 150000
        zoom.maxScale  1000000
    }

    models+ {
        type "postgres"
        uid "model_poi_lazy"
        title "POIs"
        loadingStrategy "lazy"
        sort+ { fieldName "name" }
        tableName "edit.poi"
        permissions.edit "allow all"

        fields+ {
            name "id"
            type "integer"
            title "Identifier"
            isPrimaryKey true
            permissions.edit "deny all"
        }

        fields+ {
            name "name"
            type "text"
            title "Object name"
            isRequired true
            textSearch { type "any" }
        }

        fields+ {
            name "geom"
            type "geometry"
            title "Geometry"
            isRequired true
        }

        templates+ {
            subject "feature.title"
            type "html"
            text "{{name}} ( {{id}} )"
        }
    }

    models+ {
        type "postgres"
        uid "model_district_lazy"
        title "Districts"
        loadingStrategy "lazy"
        sort+ { fieldName "name" }
        tableName "edit.district"
        permissions.edit "allow all"

        fields+ {
            name "sid"
            type "text"
            title "Identifier"
            isPrimaryKey true
        }

        fields+ {
            name "name"
            type "text"
            title "Object name"
            isRequired true
            textSearch { type "any" }
        }

        fields+ {
            name "geom"
            type "geometry"
            title "Geometry"
            isRequired true
        }

        templates+ {
            subject "feature.title"
            type "html"
            text "{{name}} ( {{sid}} )"
        }
    }

    models+ {
        type "postgres"
        uid "model_person_lazy"
        tableName "edit.person"
        permissions.edit "allow all"
        sort+ { fieldName "name" }
        title "Personen"

        fields+ {
            name "id"
            type "integer"
            title "Identifier"
            isPrimaryKey true
            permissions.edit "deny all"
        }

        fields+ {
            name "name"
            type "text"
            title "Name"
            isRequired true
            textSearch { type "any" }
        }

        fields+ {
            name "favorite"
            title "Favourite Location"
            type "relatedFeature"
            relation {
                modelUid "model_poi_lazy"
            }
            foreignKey {
                name "poi_id"
            }
            widget.type "featureSuggest"
        }

        fields+ {
            name "lives"
            title "Lives in"
            type "relatedFeature"
            relation {
                modelUid "model_district_lazy"
            }
            foreignKey {
                name "district_sid"
            }
            widget.type "featureSuggest"
        }

        templates+ {
            subject "feature.title"
            type "html"
            text "{{@if feature.isNew}} neue Person {{@else}} {{name}} {{@end}}"
        }
    }

    {demo_osm_background}
}
