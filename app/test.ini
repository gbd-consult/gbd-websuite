# GWS test suite configuration file
#
# These options are 'reasonable defaults' for all cases.
# If you need to overwrite any option here,
# create  `test.local.ini` in `app/` and place your local overrides there.

# ------------------------------------------------------------------
# pytest and flake defaults

[pytest]
addopts = -vv --tb=native --capture=fd -p no:warnings -p gws.lib.test.plugin --color=yes

[flake8]
ignore = N815
exclude = /gws/core/ext.py
max-complexity = 10

# ------------------------------------------------------------------
# options for the test runner

[runner]
# docker compose program
docker_compose = docker compose
# services to activate (from services.py)
services = gws,postgres
# host machine name
hostname = gws_test_host
# temporary working directory on the host
work_dir = /tmp/gws_test
# health check attempt count
health_check_attempts = 20

# ------------------------------------------------------------------
# environment (paths are relative to 'work_dir')

[environment]
PGSERVICEFILE = ./pg_service.conf
GWS_UID = 1000
GWS_GID = 1000


# ------------------------------------------------------------------
# options for the gws docker service

[service.gws]
# docker image
image = gbdconsult/gws-server:8.0
# docker container name
name = gws
# data directory
datadir = /tmp/gws_test_data
# where to expose the GWS http server
http_port = 9990
# where to expose the GWS mapproxy server
mpx_port = 9991

# ------------------------------------------------------------------
# options for the gws qgis service

[service.qgis]
# docker image
image = gbdconsult/qgis-server-debug:3.22
# docker container name
name = gws_test_qgis
# where to expose the qgis server
port = 9992

# ------------------------------------------------------------------
# options for the postgres service

[service.postgres]
# docker image
image = postgis/postgis:15-3.3
# docker container name
name = gws_test_postgres
# where to expose the postgres port
port = 9001
# postgres data directory
datadir = /tmp/gws_test_postgres
# db connection options
user = gis
password = gispass
database = gisdb

# ------------------------------------------------------------------
# options for the web mock server

[service.mockserv]
# docker image
image = python:3
# docker container name
name = gws_test_mockserv
# python requirements
requirements = Pillow==8.3.1 requests==2.26.0
# where to expose the web server port
port = 9994
