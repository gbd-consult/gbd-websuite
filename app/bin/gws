#!/bin/bash

export GWS_APP_DIR=${GWS_APP_DIR:-/gws-app}
export GWS_VAR_DIR=${GWS_VAR_DIR:-/gws-var}
export GWS_TMP_DIR=${GWS_TMP_DIR:-/tmp/gws}
export GWS_UID=${GWS_UID:-1000}
export GWS_GID=${GWS_GID:-1000}

PYTHON=python3

MAIN_PY=$GWS_APP_DIR/bin/_gws.py
TEST_PY=$GWS_APP_DIR/bin/_test.py

XVFB=/usr/bin/Xvfb
XVFBARGS='-dpi 96 -screen 0 1024x768x24 -ac +extension GLX +render -noreset -nolisten tcp'

SERVER_CMD=$GWS_VAR_DIR/server.sh

QGIS_EXE=/usr/bin/qgis_mapserv.fcgi

export LC_ALL=C.UTF-8
export PYTHONPATH=$GWS_APP_DIR
export PYTHONDONTWRITEBYTECODE=1

ensure_xvfb() {
    export DISPLAY=:99
    export XDG_RUNTIME_DIR=$GWS_TMP_DIR/xdg

    mkdir -p $XDG_RUNTIME_DIR
    chown $GWS_UID:$GWS_GID $XDG_RUNTIME_DIR

    until start-stop-daemon --status --exec $XVFB; do
        echo 'waiting for xvfb...'
        start-stop-daemon --start --background --exec $XVFB --oknodo -- $DISPLAY $XVFBARGS
        sleep 0.5
    done
}

remove_temp_dir() {
  rm -fr $GWS_TMP_DIR
}

ensure_temp_dir() {
  mkdir -p $GWS_TMP_DIR
  chown $GWS_UID:$GWS_GID $GWS_TMP_DIR
  chmod 1777 $GWS_TMP_DIR
}

ensure_var_dir() {
  mkdir -p $GWS_VAR_DIR
  chown $GWS_UID:$GWS_GID $GWS_VAR_DIR
  chmod 750 $GWS_VAR_DIR
}

###########################################################################

ensure_temp_dir
ensure_var_dir

if [ "$1" == "server" ]; then

    if [ "$2" == "stop" ]; then
      $PYTHON $MAIN_PY "$@"
      exit $?
    fi

    [ -f $QGIS_EXE ] && ensure_xvfb

    rm -f $SERVER_CMD

    $PYTHON $MAIN_PY "$@"
    [ $? -eq 0 ] || exit $?

    [ -f $SERVER_CMD ] && chmod 700 $SERVER_CMD && exec $SERVER_CMD
    exit $?
fi

if [ "$1" == "test" ]; then
    shift
    $PYTHON $TEST_PY "$@"
    exit $?
fi

if [ "$1" == "-p" ]; then
    shift
    SCRIPT=$1
    shift
    $PYTHON $SCRIPT "$@"
    exit $?
fi

$PYTHON $MAIN_PY "$@"
